name: Create Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
    branches: [ main ]

env:
  tic80version: '1.0'
  tic80release: '2164'
  scripttype: moon
  scriptextension: moon
  projectname: whitch
  BUILD_TYPE: MinSizeRel
  butlerversion: 15.21.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
                
      - name: Cache TIC-80 build
        id: cache-tic80
        uses: actions/cache@v3.2.6
        with:
          path: /usr/local/bin/tic80
          key: tag-v${{ env.tic80version }}.${{ env.tic80release }}
          
      - if: ${{ steps.cache-tic80.outputs.cache-hit != 'true' }}
        name: Clone TIC-80 Github Repo
        uses: GuillaumeFalourd/clone-github-repo-action@v2
        with:
          owner: nesbox
          repository: TIC-80
          
      - if: ${{ steps.cache-tic80.outputs.cache-hit != 'true' }}
        name: Checkout TIC-80 Release Tag
        run: |
          cd TIC-80
          git checkout v${tic80version:?}.${tic80release:?}
          
      - if: ${{ steps.cache-tic80.outputs.cache-hit != 'true' }}
        name: Update Git Submodules
        run: |
          cd TIC-80
          git submodule update --init --recursive
          
      - if: ${{ steps.cache-tic80.outputs.cache-hit != 'true' }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - if: ${{ steps.cache-tic80.outputs.cache-hit != 'true' }}
        name: Install TIC-80 build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libglu1-mesa-dev libasound2-dev libpulse-dev libaudio-dev libsamplerate0-dev -y
       
      - if: ${{ steps.cache-tic80.outputs.cache-hit != 'true' }}   
        name: Build
        run: |
          cd TIC-80/build
          cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_SDLGPU=On -DBUILD_PRO=On ..
          cmake --build . --config $BUILD_TYPE --parallel
          make -j4
          sudo make install
          
      - name: Compile cart with TIC-80
        run: |
          tic80 \
            --cli \
            --fs . \
            --cmd "load ${projectname:?}.${scriptextension:?} & mkdir dist & cd dist & save ${projectname:?} & export html ${projectname:?}-html5 --alone=1" | tee tic.log          
          if [[ $(cat ./tic.log) == *"error"* ]]; then
            exit 1
          fi
          
      - name: Upload Cart Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.projectname }}.tic
          path: ./dist/*.tic

      - name: Upload HTML5 Artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.projectname }}-html5.zip
          path: ./dist/*.zip

  release:         
    runs-on: ubuntu-latest
    needs: build
    if: github.ref_type == 'tag'

    steps:
      - name: Dist directory
        run: mkdir -p dist

      - name: Download Cart Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: ${{ env.projectname }}.tic
          path: ./dist/

      - name: Download HTML5 Cart Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: ${{ env.projectname }}-html5.zip
          path: ./dist/
          
      - uses: ncipollo/release-action@v1
        with:
          artifacts: ./dist/${{ env.projectname }}.tic
          token: ${{ secrets.GITHUB_TOKEN }}
          body: 'A [TIC-80](https://tic80.com/) cart.'
      
      - name: Download Butler
        run: |
          curl -L -o butler.zip \
            https://broth.itch.ovh/butler/linux-amd64/${butlerversion:?}/archive/default
          unzip butler.zip
          # GNU unzip tends to not set the executable bit even though it's set in the .zip
          chmod +x butler
          # just a sanity check run (and also helpful in case you're sharing CI logs)
          ./butler -V
          
      - name: Push Cart to itch.io
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API }}
        run: |
          ./butler push \
            ./dist/${{ env.projectname }}-html5.zip \
            ${{ github.repository_owner }}/${{ env.projectname }}:html5 \
            --userversion ${{ github.ref_name }}

          ./butler push \
            ./dist/${{ env.projectname }}.tic \
            ${{ github.repository_owner }}/${{ env.projectname }}:tic \
            --userversion ${{ github.ref_name }}
